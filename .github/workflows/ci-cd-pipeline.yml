name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Trigger on push to the main branch

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        
      - name: Set environment variables
        env:
          AWS_REGION: us-east-1             # Static AWS region
          AWS_ACCOUNT_ID: 365299945243      # Static AWS account ID
          ECR_REPO: 365299945243.dkr.ecr.$AWS_REGION.amazonaws.com/hello-ecs
        run: echo "Setting AWS region to $AWS_REGION and ECR repository to $ECR_REPO"

      - name: Login to ECR
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
          AWS_REGION: us-east-1
        run: |
          echo "Logging in to Amazon ECR..."
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REPO

      - name: Build Docker image
        run: |
          docker build -t $ECR_REPO:latest .

      - name: Push Docker image to ECR
        run: |
          docker push $ECR_REPO:latest

      - name: Deploy to ECS
        id: deploy
        run: |
          echo "Deploying to ECS..."
          echo "${{ github.sha }}" > last_stable_tag.txt
          echo "Last stable tag is ${{ github.sha }}."
          docker tag $ECR_REPO:latest $ECR_REPO:${{ github.sha }}
          docker push $ECR_REPO:${{ github.sha }}

      - name: Rollback if deployment fails
        if: failure()
        run: |
          echo "Deployment failed. Rolling back to the last stable version..."
          LAST_STABLE_TAG=$(cat last_stable_tag.txt)
          echo "Rolling back to ${LAST_STABLE_TAG}..."
          docker tag $ECR_REPO:${LAST_STABLE_TAG} $ECR_REPO:latest
          docker push $ECR_REPO:latest
          echo "Rollback complete."
